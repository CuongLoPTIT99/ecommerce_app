name: ecommerce-app
services:
  postgres:
    container_name: postgres
    image: postgres:17
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net

  mongodb:
    image: mongo
    container_name: mongo_db
    ports:
      - 27017:27017
    volumes:
      - mongo:/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin

  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=admin
      - ME_CONFIG_MONGODB_SERVER=mongodb

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: ms_kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    networks:
      - microservices-net
      
  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:26.1.1
    command:
      - start-dev
      - --https-certificate-file=/etc/x509/https/tls.crt
      - --https-certificate-key-file=/etc/x509/https/tls.key
    volumes:
      - ./keycloak-certs1/keycloak.crt:/etc/x509/https/tls.crt
      - ./keycloak-certs1/keycloak.key:/etc/x509/https/tls.key
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 9080
      KC_HTTPS_PORT: 8443
      KC_HTTP_MANAGEMENT_PORT: 9990
      KC_DB: postgres            
      KC_DB_URL: jdbc:postgresql://postgres/keycloak           
      KC_DB_USERNAME: admin          
      KC_DB_PASSWORD: admin
    # If you want to expose these ports outside your dev PC,
    # remove the "127.0.0.1:" prefix
    ports:
      - 9080:9080
      - 8443:8443
    networks:
      - microservices-net
      
  redis:
    image: redis:7.4.2
    container_name: redis
    command: ["redis-server","/usr/local/etc/redis/redis.conf"]
    restart: always
    volumes: 
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - microservices-net
      
  redisinsight:
    image: redis/redisinsight:2.68
    container_name: redisinsight
    restart: always
    volumes: 
      - redis_insight_data:/db
    ports:
      - "5540:5540"
    depends_on:
      - redis
    networks:
      - microservices-net
      
  
      
  
  mail-dev:
    container_name: ms-mail-dev
    image: maildev/maildev
    ports:
      - 1080:1080
      - 1025:1025

networks:
  microservices-net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  mongo:
  redis_data:
  redis_insight_data: